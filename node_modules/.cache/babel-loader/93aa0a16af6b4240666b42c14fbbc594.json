{"ast":null,"code":"import _regeneratorRuntime from\"/workspaces/casino-dApp/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/workspaces/casino-dApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/workspaces/casino-dApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/workspaces/casino-dApp/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/workspaces/casino-dApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/workspaces/casino-dApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/workspaces/casino-dApp/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import Web3 from\"web3\";import\"./App.css\";import CasinoInterface from\"./contracts/Casino.json\";var ABI=CasinoInterface.abi;// REPLACE WITH YOUR OWN KEY\nvar INFURA_KEY=\"4e3d493b08a24961be7a074185da3c21\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));// Change this to your contract address\n_this.contractAddress=\"0x80CA5DAC78558C825C0f31E28ED9Dd5ec92bF3e2\";_this.validBets=[1,2,3,4,5,6,7,8,9,10];_this.state={winningNumber:0,numberOfBets:0,minimumBet:0,totalBet:0,maxNumberOfBets:0,currentBet:0};return _this;}_createClass(App,[{key:\"activateWeb3\",value:function(){var _activateWeb=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var contract;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!window.ethereum){_context.next=10;break;}window.web3=new Web3(window.ethereum);_context.prev=2;_context.next=5;return window.ethereum.enable();case 5:_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](2);console.log(\"Access Denied\");case 10:if(typeof Web3!=\"undefined\"){console.log(\"Using Web3 detected from external source like Metamask\");this.web3=new Web3(window.ethereum);}else{console.log(\"No web3 detected. Falling back to HTTP provider.\");this.web3=new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/\".concat(INFURA_KEY)));}contract=new this.web3.eth.Contract(ABI,this.contractAddress);this.contractInstance=contract;case 13:case\"end\":return _context.stop();}}},_callee,this,[[2,7]]);}));function activateWeb3(){return _activateWeb.apply(this,arguments);}return activateWeb3;}()},{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return this.activateWeb3();case 2:_context2.next=4;return this.updateState();case 4:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"updateState\",value:function(){var _updateState=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var minimumBet,totalBet,numberOfBets,maxNumberOfBets,winningNumber;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.contractInstance.methods.minimumBet().call();case 2:minimumBet=_context3.sent;this.setState({minimumBet:parseFloat(Web3.utils.fromWei(minimumBet,\"ether\"))});_context3.next=6;return this.contractInstance.methods.getContractBalance().call();case 6:totalBet=_context3.sent;this.setState({totalBet:parseFloat(Web3.utils.fromWei(totalBet,\"ether\"))});_context3.next=10;return this.contractInstance.methods.numberOfBets().call();case 10:numberOfBets=_context3.sent;this.setState({numberOfBets:numberOfBets});_context3.next=14;return this.contractInstance.methods.maxNumberOfBets().call();case 14:maxNumberOfBets=_context3.sent;this.setState({maxNumberOfBets:maxNumberOfBets});_context3.next=18;return this.contractInstance.methods.winningNumber().call();case 18:winningNumber=_context3.sent;this.setState({winningNumber:winningNumber});case 20:case\"end\":return _context3.stop();}}},_callee3,this);}));function updateState(){return _updateState.apply(this,arguments);}return updateState;}()},{key:\"voteNumber\",value:function(){var _voteNumber=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(number){var bet,result;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:bet=this.state.currentBet;if(!(parseFloat(bet)<this.state.minimumBet)){_context4.next=5;break;}alert(\"You must bet more than the minimum\");_context4.next=9;break;case 5:_context4.next=7;return this.contractInstance.methods.bet(number).send({gas:3000000,from:window.web3.eth.accounts.currentProvider.selectedAddress,value:Web3.utils.toWei(bet,\"ether\")});case 7:result=_context4.sent;console.log(result);case 9:case\"end\":return _context4.stop();}}},_callee4,this);}));function voteNumber(_x){return _voteNumber.apply(this,arguments);}return voteNumber;}()},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:\"main-container\"},React.createElement(\"h1\",null,\"Bet for your best number and win huge amounts of Ether\"),React.createElement(\"div\",{className:\"block\"},React.createElement(\"b\",null,\"Number of bets:\"),\" \\xA0\",React.createElement(\"span\",null,this.state.numberOfBets)),React.createElement(\"div\",{className:\"block\"},React.createElement(\"b\",null,\"Last winning number:\"),\" \\xA0\",React.createElement(\"span\",null,parseInt(this.state.winningNumber)===0?\"No draws yet\":this.state.winningNumber)),React.createElement(\"div\",{className:\"block\"},React.createElement(\"b\",null,\"Total ether bet:\"),\" \\xA0\",React.createElement(\"span\",null,this.state.totalBet,\" ether\")),React.createElement(\"div\",{className:\"block\"},React.createElement(\"b\",null,\"Minimum bet:\"),\" \\xA0\",React.createElement(\"span\",null,this.state.minimumBet,\" ether\")),React.createElement(\"div\",{className:\"block\"},React.createElement(\"b\",null,\"Max number of bets:\"),\" \\xA0\",React.createElement(\"span\",null,this.state.maxNumberOfBets)),React.createElement(\"hr\",null),React.createElement(\"h2\",null,\"Vote for the next number\"),React.createElement(\"label\",null,React.createElement(\"b\",null,\"How much Ether do you want to bet?\",\" \",React.createElement(\"input\",{className:\"bet-input\",ref:\"ether-bet\",type:\"number\",onChange:function onChange(evt){_this2.setState({currentBet:evt.target.value});},placeholder:\"Enter Bet\"})),\" \",\"ether\",React.createElement(\"br\",null)),React.createElement(\"ul\",{ref:\"numbers\"},this.validBets.map(function(bet){return React.createElement(\"li\",{onClick:function onClick(){_this2.voteNumber(bet);}},bet);})),React.createElement(\"hr\",null),React.createElement(\"div\",null,React.createElement(\"i\",null,\"Only working with the Ropsten Test Network\")),React.createElement(\"div\",null,React.createElement(\"i\",null,\"You can only vote once per account\")),React.createElement(\"div\",null,React.createElement(\"i\",null,\"Your vote will be reflected when the next block is mined\")));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/workspaces/casino-dApp/src/App.js"],"names":["React","Web3","CasinoInterface","ABI","abi","INFURA_KEY","App","props","contractAddress","validBets","state","winningNumber","numberOfBets","minimumBet","totalBet","maxNumberOfBets","currentBet","window","ethereum","web3","enable","console","log","providers","HttpProvider","contract","eth","Contract","contractInstance","activateWeb3","updateState","methods","call","setState","parseFloat","utils","fromWei","getContractBalance","number","bet","alert","send","gas","from","accounts","currentProvider","selectedAddress","value","toWei","result","parseInt","evt","target","map","voteNumber","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Web3 from \"web3\";\n\nimport \"./App.css\";\nimport CasinoInterface from \"./contracts/Casino.json\";\n\nconst ABI = CasinoInterface.abi\n\n// REPLACE WITH YOUR OWN KEY\nconst INFURA_KEY = \"4e3d493b08a24961be7a074185da3c21\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Change this to your contract address\n    this.contractAddress = \"0x80CA5DAC78558C825C0f31E28ED9Dd5ec92bF3e2\"\n\n    this.validBets = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    this.state = {\n      winningNumber: 0,\n      numberOfBets: 0,\n      minimumBet: 0,\n      totalBet: 0,\n      maxNumberOfBets: 0,\n      currentBet: 0\n    };\n  }\n\n  async activateWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      try {\n        // Request account access.\n        await window.ethereum.enable();\n      } catch (error) {\n        console.log(\"Access Denied\");\n      }\n    }\n\n    if (typeof Web3 != \"undefined\") {\n      console.log(\"Using Web3 detected from external source like Metamask\");\n      this.web3 = new Web3(window.ethereum);\n    } else {\n      console.log(\"No web3 detected. Falling back to HTTP provider.\");\n      this.web3 = new Web3(\n        new Web3.providers.HttpProvider(\n          `https://ropsten.infura.io/v3/${INFURA_KEY}`\n        )\n      );\n    }\n\n    const contract = new this.web3.eth.Contract(\n      ABI,\n      this.contractAddress\n    );\n    this.contractInstance = contract;\n  }\n\n  async componentDidMount() {\n    await this.activateWeb3();\n    await this.updateState();\n  }\n\n  async updateState() {\n    const minimumBet = await this.contractInstance.methods.minimumBet().call();\n    this.setState({\n      minimumBet: parseFloat(Web3.utils.fromWei(minimumBet, \"ether\"))\n    });\n\n    const totalBet = await this.contractInstance.methods.getContractBalance().call();\n    this.setState({\n      totalBet: parseFloat(Web3.utils.fromWei(totalBet, \"ether\"))\n    });\n\n    const numberOfBets = await this.contractInstance.methods\n      .numberOfBets()\n      .call();\n    this.setState({\n      numberOfBets: numberOfBets\n    });\n\n    const maxNumberOfBets = await this.contractInstance.methods\n      .maxNumberOfBets()\n      .call();\n    this.setState({\n      maxNumberOfBets: maxNumberOfBets\n    });\n\n    const winningNumber = await this.contractInstance.methods\n      .winningNumber()\n      .call();\n    this.setState({\n      winningNumber: winningNumber\n    });\n  }\n\n  async voteNumber(number) {\n    let bet = this.state.currentBet;\n\n    if (parseFloat(bet) < this.state.minimumBet) {\n      alert(\"You must bet more than the minimum\");\n    } else {\n      const result = await this.contractInstance.methods.bet(number).send({\n        gas: 3000000,\n        from: window.web3.eth.accounts.currentProvider.selectedAddress,\n        value: Web3.utils.toWei(bet, \"ether\")\n      });\n      console.log(result);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <h1>Bet for your best number and win huge amounts of Ether</h1>\n\n        <div className=\"block\">\n          <b>Number of bets:</b> &nbsp;\n          <span>{this.state.numberOfBets}</span>\n        </div>\n\n        <div className=\"block\">\n          <b>Last winning number:</b> &nbsp;\n          <span>{parseInt(this.state.winningNumber) === 0 ? \"No draws yet\" : this.state.winningNumber}</span>\n        </div>\n\n        <div className=\"block\">\n          <b>Total ether bet:</b> &nbsp;\n          <span>{this.state.totalBet} ether</span>\n        </div>\n\n        <div className=\"block\">\n          <b>Minimum bet:</b> &nbsp;\n          <span>{this.state.minimumBet} ether</span>\n        </div>\n\n        <div className=\"block\">\n          <b>Max number of bets:</b> &nbsp;\n          <span>{this.state.maxNumberOfBets}</span>\n        </div>\n\n        <hr />\n\n        <h2>Vote for the next number</h2>\n\n        <label>\n          <b>\n            How much Ether do you want to bet?{\" \"}\n            <input\n              className=\"bet-input\"\n              ref=\"ether-bet\"\n              type=\"number\"\n              onChange={evt => {\n                this.setState({\n                  currentBet: evt.target.value\n                });\n              }}\n              placeholder={\"Enter Bet\"}\n            />\n          </b>{\" \"}\n          ether\n          <br />\n        </label>\n\n        <ul ref=\"numbers\">\n          {this.validBets.map(bet => {\n            return (\n              <li\n                onClick={() => {\n                  this.voteNumber(bet);\n                }}\n              >\n                {bet}\n              </li>\n            );\n          })}\n        </ul>\n\n        <hr />\n\n        <div>\n          <i>Only working with the Ropsten Test Network</i>\n        </div>\n        <div>\n          <i>You can only vote once per account</i>\n        </div>\n        <div>\n          <i>Your vote will be reflected when the next block is mined</i>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}